{
    "swagger": "2.0",
    "info": {
        "description": "Bu API, yapılacaklar listelerini ve içindeki görevleri yönetmek için geliştirilmiştir.",
        "title": "Privia Todo List API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Sebahattin - Developer",
            "email": "sebahattin@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8081",
    "basePath": "/api/v1",
    "paths": {
        "/admin/todolists": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all todo lists including deleted ones (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Retrieve all todo lists",
                "responses": {
                    "200": {
                        "description": "List of all todo lists",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TodoList"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/admin/todolists/{id}/items": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all todo items for the specified list (including deleted ones). Only admin users can access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get all items for a specific list (including deleted ones)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo List ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All items in the list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TodoItem"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: Only admin users can access this endpoint"
                    },
                    "404": {
                        "description": "Todo list not found"
                    }
                }
            }
        },
        "/items/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an item in the list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TodoItems"
                ],
                "summary": "Update a todo item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Item",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TodoItemUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TodoItem"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload"
                    },
                    "404": {
                        "description": "Item not found"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Marks a specific todo item as deleted (soft delete). Not actually deleted, just fills the DeletedAt field.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TodoItems"
                ],
                "summary": "Soft delete a todo item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deletion successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Item already deleted"
                    },
                    "403": {
                        "description": "No permission to delete this item"
                    },
                    "404": {
                        "description": "Todo item not found"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate with username and password to receive a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication token"
                    },
                    "400": {
                        "description": "Invalid JSON or credentials"
                    },
                    "401": {
                        "description": "User role or ID not found"
                    },
                    "500": {
                        "description": "Token generation failed"
                    }
                }
            }
        },
        "/todolists": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all active todo lists for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TodoLists"
                ],
                "summary": "Get user's todo lists",
                "responses": {
                    "200": {
                        "description": "User's todo lists",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TodoList"
                            }
                        }
                    },
                    "401": {
                        "description": "User not authorized"
                    },
                    "500": {
                        "description": "Failed to retrieve todo lists"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new todo list for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TodoLists"
                ],
                "summary": "Create a new todo list",
                "parameters": [
                    {
                        "description": "Todo List details",
                        "name": "todoList",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TodoListCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created todo list",
                        "schema": {
                            "$ref": "#/definitions/models.TodoList"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload"
                    },
                    "401": {
                        "description": "User not authorized"
                    }
                }
            }
        },
        "/todolists/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing todo list by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TodoLists"
                ],
                "summary": "Update a todo list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo List ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated todo list details",
                        "name": "todoList",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TodoListUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated todo list",
                        "schema": {
                            "$ref": "#/definitions/models.TodoList"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload"
                    },
                    "401": {
                        "description": "User not authorized"
                    },
                    "403": {
                        "description": "Forbidden access"
                    },
                    "404": {
                        "description": "Todo list not found"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Soft deletes a todo list by setting DeletedAt timestamp",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TodoLists"
                ],
                "summary": "Delete a todo list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo List ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List and all its items marked as deleted"
                    },
                    "400": {
                        "description": "Invalid Todo List ID"
                    },
                    "401": {
                        "description": "User not authorized"
                    },
                    "403": {
                        "description": "Forbidden access"
                    },
                    "404": {
                        "description": "Todo list not found or already deleted"
                    }
                }
            }
        },
        "/todolists/{id}/items": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves non-deleted todo items for the specified list. Users can only access their own lists.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TodoItems"
                ],
                "summary": "Get active items for a specific list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo List ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of active todo items",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TodoItem"
                            }
                        }
                    },
                    "403": {
                        "description": "You don't have permission to access this list"
                    },
                    "404": {
                        "description": "List not found"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds a new item to a specific todo list. Requires authenticated user access.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TodoItems"
                ],
                "summary": "Add a new todo item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo List ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New Item Details",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TodoItemCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Newly created todo item",
                        "schema": {
                            "$ref": "#/definitions/models.TodoItem"
                        }
                    },
                    "400": {
                        "description": "Invalid request (e.g., malformed JSON)"
                    },
                    "403": {
                        "description": "No permission to access this list"
                    },
                    "404": {
                        "description": "Specified list not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.TodoItem": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_done": {
                    "type": "boolean",
                    "default": false
                },
                "list_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.TodoItemCreate": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "is_done": {
                    "type": "boolean"
                }
            }
        },
        "models.TodoItemUpdate": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "is_done": {
                    "type": "boolean"
                }
            }
        },
        "models.TodoList": {
            "type": "object",
            "properties": {
                "completion": {
                    "type": "number",
                    "default": 0
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TodoItem"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.TodoListCreate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.TodoListUpdate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Bearer Authentication kullanarak erişim",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}